:root {
  /* --layout-border: thin dotted darkgrey; */

  --font-family: system-ui, sans-serif;

  /* Desktop Umgebung gibt die Schriftgröße in der Einheit pt an */
  --font-size: 11pt;

  /* Abstände der Blockelemente */
  --space-2xs: 0.25rem;
  --space-xs: 0.5rem;
  --space-s: 0.75rem;
  --space-m: 1rem;
  --space-l: 1.5rem;
  --space-xl: 2rem;

  /* Textfarbe für aktive Elemente, normale Schriftfarbe */
  --color-text: #f2f2f2;
  --color-text-low: hsl(from var(--color-text) h s calc(l - 20));
  --color-text-high: hsl(from var(--color-text) h s calc(l + 20));

  /* Akkzentfarbe des Browser. Wenn die Akzentfarbe des Browsers verwendet wird, müssen die Steuerelemente des Browsers nicht angepasst werden. Das betrifft zum Beispiel das select Element. Komplexere Steuerelemente, die einen eigenen Dialog öffnen, berücksichtigen dies aber nicht. */
  --color-accent: #3584e4;
  --color-accent-low: hsl(213, 50%, 50%);
  --color-accent-high: hsl(213, 55%, 45%);

  --color-danger: #f00;
  --color-danger-low: hsl(0, 50%, 50%);
  --color-danger-high: hsl(0, 55%, 45%);

  /* Hintegrundfarbe */
  --color-background0: #1e1e1e;
  --color-background1: #272727;
  --color-background2: #2b2b2b;
  --color-background3: #3b3b3b;
  --color-background4: #4b4b4b;

  /* TODO: An die Schatten muss ich noch einmal ran. */
  --color-border-sidebar-right: #1f1f1f;

  --border-radius: 6px;
  --border-radius-large: 10px;

  color-scheme: light dark;
}

/* Reset / Defaults */

*,
*::before,
*::after {
  box-sizing: border-box;
}

* {
  margin: 0;
}

body {
  font-family: var(--font-family);
  color: var(--color-text);
  background-color: var(--color-background0);
}

html {
  accent-color: var(--color-accent);
  font-size: var(--font-size);
  line-height: 1.6;
}

a,
a:visited {
  color: var(--color-text-low)
}

a:hover {
  color: var(--color-text-high);
}

::selection {
  /* TODO: Vielleicht gibt es doch eine Möglichkeit die Akzentfarbe des Systems anzuzapfen. (Als Farbe den Wert Highlight benutzen.) */
  background-color: var(--color-accent);
}

img {
  max-width: 100%;
  display: block;
}

input,
button,
textarea,
select {
  font-family: inherit;
  font-size: inherit;
}

menu,
ul {
  li a {
    text-decoration: none;
  }
}

th a,
td a:empty,
dd a {
  text-decoration: none;
  color: inherit;
}

/* Typografie */

figcaption,
caption {
  font-weight: bold;
  text-align: left;
}


/* Horizontale Abstände */
menu {
  padding: 0;
}

/* Vertikale Abstände */
article,
table,
div,
h1,
h2,
h3,
h4,
h5,
h6,
details {
  margin-top: var(--space-l);
}

/* Typographie für Überschriften */
h1,
h2,
h3 {
  text-align: left;
}

h4,
h5,
h6 {
  text-align: center;
}


h1,
h4 {
  font-size: large;
}

h2,
h5 {
  font-size: larger;
}

h3,
h6 {
  font-size: 1em;
}

p,
pre,
caption,
figure,
figcaption,
fieldset,
dl,
ol>li {
  margin-top: var(--space-s);
}

/* Innenabstände */
button,
input[type=button],
input[type=submit],
input[type=reset],
[role=button],
header label {
  padding: var(--space-xs) var(--space-m);
}

/* Elemente mit abgerundeten Ecken */

button,
input[type=button],
input[type=submit],
input[type=reset],
[role=button],
header label,
aside>nav menu li a {
  border-radius: var(--border-radius);
}



/* Nur am oberen Rand abgerundete Ecken */
details[open]>summary,
dl>div:first-child,
fieldset>label:first-child {
  border-radius: var(--border-radius-large) var(--border-radius-large) 0 0;
}

/* Nur am unteren Rand abgerundete Ecken */
dl>div:last-child,
fieldset>label:last-child {
  border-bottom-right-radius: var(--border-radius-large);
  border-bottom-left-radius: var(--border-radius-large);
}

details,
summary,
.breakout,
td img,
fieldset,
textarea,
dl>div:first-child:last-child,
fieldset>label:first-child:last-child {
  border-radius: var(--border-radius-large);
}

summary {
  padding: var(--space-m);
}

/* Anwendungslayout */

body {
  height: 100vh;
  width: 100vw;
  ;
  display: grid;
  grid-template-areas:
    "sidebar header"
    "sidebar content"
    "footer footer";

  /* Die Sidebar nimmt sich soviel Platz, wie sie benötigt; Der Inhaltsbereich wächst mit der Fenstergröße.*/
  grid-template-columns: auto 1fr;
  grid-template-rows: auto 1fr auto;

  overflow: hidden;

  &>header {
    grid-area: header;
  }
}

header,
footer {
  outline: var(--layout-border);
  height: auto;
}

body>header,
body>footer {
  outline: var(--layout-border);
}

main {
  grid-area: content;
  overflow-y: auto;
  min-height: 0;
}

aside {
  grid-area: sidebar;
}

footer {
  grid-area: footer;
}


/* Content Layout */

main {

  --padding-inline: var(--space-xl);
  --content-width: 70ch;
  --breakout-width: 95ch;

  --breakout-size: calc((var(--breakout-width) - var(--content-width)) / 2);

  display: grid;
  align-content: start;
  grid-template-columns: [full-width-start] minmax(var(--padding-inline), 1fr) [breakout-start] minmax(0, var(--breakout-size)) [content-start] min(100% - (var(--padding-inline) * 2), var(--content-width)) [content-end] minmax(0, var(--breakout-size)) [breakout-end] minmax(var(--padding-inline), 1fr) [full-width-end];

  >* {
    grid-column: content;
  }

  /* Etwas breiter als gewöhnlicher Inhalt */
  >.breakout {
    grid-column: breakout;
  }

  /* Vollständige Breite des Inhaltsbereichs */
  >.full-width {
    grid-column: full-width;
  }
}

/* Styling */

/* Allgemeine Gestaltung der Schatlfächen */
button,
input[type=button],
input[type=submit],
input[type=reset],
[role=button] {
  border: none;

  font-weight: 600;
  cursor: default;
  line-height: 1.1;

  color: var(--button-fg);
  background-color: var(--button-bg);

  b,
  strong {
    font-weight: 600;
  }

  em {
    font-style: normal;
  }

  &:hover {
    color: var(--button-highlight-fg);
    background-color: var(--button-highlight-bg);
  }
}

button,
a[role=button],
input[type=button],
input[type=submit],
input[type=reset] {
  --button-fg: var(--color-text-low);
  --button-highlight-fg: var(--color-text-high);
}

/* Vorrangige Steuerelemente */
button:has(em),
a[role=button]:has(em),
input[type=submit] {
  --button-bg: var(--color-accent-low);
  --button-highlight-bg: var(--color-accent-high);
}

/* Destruktive Steuerelemente */
button:has(strong),
a[role=button]:has(strong) {
  --button-bg: var(--color-danger-low);
  --button-highlight-bg: var(--color-danger-high);
}

/* Nachrangige Steuerelemente */
button:has(b),
a[role=button]:has(b),
input[type=reset],
input[type=button] {
  --button-bg: var(--color-background3);
  --button-highlight-bg: var(--color-background4);
}

/* Das Schalter Elemente (<input role=switch>) */
input[role=switch] {
  appearance: none;
  width: 50px;
  height: 24px;
  background-color: var(--color-switch-background);
  border-radius: 24px;
  cursor: pointer;
  transition: background-color 0.4s;
  display: flex;
  align-items: center;
  justify-content: flex-start;

  /* TODO: In Arbeit */
  padding: 3px;
}

input[role=switch]::before {
  content: "";
  width: 18px;
  height: 18px;
  background-color: var(--color-switch-foreground);
  border-radius: 50%;
  transition: margin-left 0.4s;
}

input[role=switch]:checked {
  background-color: var(--color-accent);
  justify-content: flex-end;
}

/* Kontextfreie Steuerelemente */
button,
a[role=button] {
  --button-bg: inherit;
  --button-highlight-bg: var(--color-background4);
}

/* Active mutually exclusive button */
span[role=button] {
  --button-fg: var(--color-text-high);
  --button-highlight-fg: var(--color-text-high);
  --button-bg: var(--color-background4);
  --button-highlight-bg: var(--color-background4);
}

a[role=button] {
  text-decoration: none;
}

a:has(em):not([role=button]) {
  color: var(--color-accent-low);

  &:visited {
    color: var(--color-accent-low);
  }

  &:hover {
    color: var(--color-accent-high);
  }

  em {
    font-style: normal;
  }
}

a:has(b) {
  color: var(--color-text-low);

  &:visited {
    color: var(--color-text-low);
  }

  &:hover {
    color: var(--color-text-high)
  }
}

/* Styles für Buttons . Das hier ist gültig!*/

aside {
  background-color: var(--color-background2);
  border-right: 1px solid var(--color-border-sidebar-right);
  font-weight: 500;
  min-height: 0;
  overflow-y: auto;

  &>nav {
    line-height: 2.8;

    /* TODO: In Arbeit */
    padding: 0 var(--space-xs);

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      margin: 0 var(--space-xs);
    }

    menu {
      list-style-type: none;

      >li {
        margin-block: var(--space-2xs);

        a {
          padding-inline: var(--space-xs);

          color: inherit;

          display: inline-block;
          width: 100%;
          height: 100%;
          border-radius: var(--border-radius);

          &:focus-visible,
          &:hover,
          &.active {
            background-color: var(--color-background3);
          }
        }
      }

      &:not(:last-child) {
        border-bottom: 1px solid var(--color-background4);
      }
    }
  }
}

details[open]>summary::after {
  content: "\276e";
}

details>*:not(:first-child) {
  margin-inline: var(--space-m);
}

details[open] {
  /* TODO: In Arbeit */
  padding-bottom: var(--space-m);

  summary {
    background-color: var(--color-background2);
  }

  summary:hover {
    background-color: var(--color-background3);
  }
}

details {

  box-shadow: 0 0 2px 2px #222222;
  background-color: var(--color-background1);

  summary {
    background-color: var(--color-background1);
    list-style-type: none;
    cursor: pointer;
  }

  summary:hover {
    background-color: var(--color-background2);
  }

  summary::after {
    display: block;
    float: right;
    content: "\276f";
    transform: rotate(270deg);
  }
}

details figure {
  overflow-x: auto;
}

.breakout {
  background-color: #2b2b2b;
  box-shadow: 0 0 2px 2px #222222;
}

main>img {
  margin-inline: auto;
  margin-top: var(--space-l);
  border-radius: 50%;
}

/* Kartenansicht (main > ul)*/
main>ul {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  grid-auto-rows: max-content;

  /* TODO: In Arbeit. Könnte das space-x sein (Faktor 1.5)? */
  grid-gap: 1.5rem;

  /* TODO: In Arbeit s.o. */
  padding: 1.5rem;
  list-style: none;

  /* Karten sind Listenelemente einer ungeordneten Liste */
  >li {
    position: relative;
    --image-scale: 1.001;
    overflow: hidden;
    transform-origin: center;
    background-color: var(--background-color);
    /* TODO: In Arbeit */
    padding-bottom: var(--space-m);
    /* TODO: Soll das verschoben werden ?*/
    border-radius: var(--border-radius-large);
    width: 100%;
    color: var(--color-text-low);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
    transition: box-shadow 0.3s ease;

    /* Die ganze Karte hervorheben, wenn der Verweis in der Karten den Fokus erhält. */
    &:focus-within {
      outline: auto;
    }

    /* Verweise mit Fokus werden nicht hervorgehoben. */
    a:focus {
      outline: none;
    }

    img {
      transform-origin: center;
      transform: scale(var(--img-scale));
      transition: transform 0.2s ease-in-out;
      object-fit: contain;
      width: 100%;
    }

    div {
      /* TODO: In Arbeit */
      padding-inline: var(--space-m);
    }

    /* Der Trick, dass eine Karte mit Verweise anklickbar ist. */
    a::after {
      position: absolute;
      inset-block: 0;
      inset-inline: 0;
      cursor: pointer;
      content: "";
    }
  }

  >li:hover,
  >li:focus-within {
    --img-scale: 1.1;
    box-shadow: 0 8px 12px rgba(0, 0, 0, 0.7);
    background-color: var(--color-background2);
    color: var(--color-text-high);
  }
}

code {
  font-size: 11pt;
  line-height: 1.6;
}

/* Listenansicht: Listenansichten sind table Elemente in main */
main table {
  table-layout: auto;
  border-collapse: collapse;
  font-variant-numeric: tabular-nums;
  /* TODO: In Arbeit */
  margin: 1.5rem;

  tr {
    /* Damit die Tabellenzeile anklickbar wird */
    position: relative;


    td a:empty {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      color: inherit;
      display: block;
      z-index: 1;

      /* Der Link liegt über dem Tabelleninhalt */

      --table-cell-background: inherit;
    }
  }

  tr:hover {
    --table-cell-background: var(--color-background1);
  }

  td {
    min-height: 3.2rem;
  }

  td,
  th {
    padding-inline: var(--space-s);
    background-color: var(--table-cell-background);
    white-space: nowrap;
    text-overflow: ellipsis;
    text-align: left;
  }

  th,
  td:not(:first-child) {
    color: #787878;
  }

  th {
    height: 2.4rem;
    font-weight: normal;

    a {
      cursor: default;
      color: inherit;
    }
  }

  th:hover:has(a) {
    background-color: var(--color-background2);

    a {
      color: var(--color-text-high);
    }
  }

  th:first-child,
  td:first-child {
    border-top-left-radius: var(--border-radius-large);
    border-bottom-left-radius: var(--border-radius-large);
    width: 100%;
  }

  th:last-child,
  td:last-child {
    border-top-right-radius: var(--border-radius-large);
    border-bottom-right-radius: var(--border-radius-large);
  }

  /* Erste Spalte ist ein Flex Container. */
  td:first-child {
    display: flex;
    flex-direction: row;
    align-items: center;
    column-gap: 20px;
  }

  td img {
    height: 2.5rem;
    width: auto;
  }
}

/* Styling für das bearbeitbare Bild in einer <figure> */
main figure:has(img) {
  position: relative;
  width: 200px;
  height: 200px;
  /* Um das Bild zu zentrieren */
  margin: var(--space-m) auto 0;


  &>img {
    width: 100%;
    height: 100%;
    /* Damit das Bild den ganzen Platz ausfüllt */
    object-fit: cover;
    border-radius: 50%;
  }

  &>div {
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: var(--space-xs);
    background-color: rgba(0, 0, 0, 0.5);

    /* TODO: In Arbeit */
    padding: var(--space-xs);

    /* TODO: Soll das wirklich verschoben werden?  */
    border-radius: var(--border-radius-large);
  }
}

/* Detailansicht Layout */

dl {

  display: flex;
  flex-direction: column;
  row-gap: 1px;

  /* Gruppierung von dt und dd in einer Zeile */
  &>div {
    display: flex;
    justify-content: space-between;
    gap: var(--space-m);
    background-color: var(--color-background1);
    margin: 0;
    overflow: hidden;
    border-radius: 0;
    /* TODO: In Arbeit */
    padding: var(--space-m);
  }

  div:hover {
    background-color: var(--color-background2);
  }

  dt,
  dd {
    margin: 0;
  }

  dt {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  dt span {
    font-size: 0.85em;
    color: #787878;
    margin-top: 4px;
  }

  dd {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    text-align: right;

    a {
      cursor: default;

      &::after {
        content: '\276f';
        margin-left: var(--space-m);
      }

      &[target=_blank]::after {
        content: '↗';
      }
    }
  }

  div:focus-visible {
    background: #3b3b3b;
  }
}

.right {
  text-align: right;
}

time {
  font-variant-numeric: tabular-nums;
}

/* Formulare */

form {

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: 11pt;
    font-weight: 600;
  }

  /* Ein Content Devision Element in einer Form ist ein Container mit Flexbox Layout. Er eignet sich insbesondere für die Anordnung verschiedener Aktionsschaltflächen. */
  &>div {
    display: flex;
    flex-flow: row wrap;
    column-gap: var(--space-s);
    justify-content: flex-start;
  }
}

fieldset {
  display: flex;
  flex-direction: column;
  gap: 2px;

  box-shadow: 0 0 1px 1px #222222;
  border: none;

  /* Überschreibt User Agent Style */
  padding: 0;


  /* 11pt = 14,6667px */
  font-size: 11pt;

  /* 14,6667px * 1.3 = 19,06671px */
  line-height: 1.3;

  label {
    border: 1px solid transparent;
  }

  /* Hebe das Label hervor, statt des fokussierten Kindelements */
  label:focus-within {
    outline: auto;
    z-index: 99;

    /* Das Kindelement nicht hervorheben */
    input,
    select,
    a,
    textarea,
    button {
      outline: none;
    }

    background-color: var(--color-background3);
  }

  a {
    color: var(--color-accent);
  }

  a:visited {
    color: var(--color-accent);
  }
}

input[type=text],
input[type=search],
input[type=number],
input[type=date],
input[type=datetime-local],
input[type=time],
input[type=week],
input[type=email],
input[type=tel],
input[type=month],
input[type=password],
input[type=url],
input[type=color] {
  background-color: inherit;
  color: inherit;
  accent-color: var(--color-accent);
  border: none;
}

fieldset {

  /* Die Durchsuchen... Schaltfläche nicht anzeigen */
  input[type=file]::file-selector-button {
    display: none;
  }

  input[type=file] {
    text-align: right;
  }

  select {
    border: none;
  }

  input[type=time],
  input[type=month],
  input[type=week],
  input[type=date],
  input[type=datetime-local] {
    background-color: inherit;
    color: inherit;
  }

  input[type=color] {
    border: 1px solid transparent;
  }

  label:has(textarea) {
    display: flex;
    flex-direction: column;
  }

  textarea {
    /* TODO: In Arbeit  */
    padding: var(--space-xs);
    resize: vertical;
    background-color: inherit;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
    min-height: 7rem;

    &:has(:hover, :focus) {
      box-shadow: 0 8px 12px rgba(0, 0, 0, 0.7);
    }
  }
}

/* Deaktivierte Felder und Felder mit Fokus nicht hervorheben */
label:hover:not([disabled]):not(:focus-within) {
  background: var(--color-background2)
}

fieldset {
  label {
    /* Zeichensatzgröße für kleine Labels */
    --font-size-small: 10px;

    /* Zeichensatzgröße für große Labels oder Eingaben */
    --font-size-normal: 14px;

    /* Regulärer Zeilenabstand - kleines Label und Eingabe */
    --line-height-normal: 1.5;

    /* Gesamthöhe des Eingabefeldes mit kleinem Label und Eingabe */
    --content-height: calc((var(--font-size-small) + var(--font-size-normal)) * var(--line-height-normal));

    background-color: var(--color-background1);
    box-shadow: 0 0 1px 1px #222222;
    /*
    Beispiel:
    Kleines Label             10px
    Großes Label oder Eingabe 14px
    Normaler Zeilenabstand    1.5
    Gesamthöhe (10px + 14px) * 1.5 = 36
  */

    /* Als Zeilenabstand die gesamte Höhe verwenden */
    line-height: var(--content-height);
    font-size: var(--font-size-normal);

    /* TODO: In Arbeit */
    padding: 10px;

    /* Kein Focus, kein Wert => unsichtbar (Größe = 0) */
    input[type=text],
    input[type=number],
    input[type=email],
    input[type=tel],
    input[type=password],
    input[type=url] {
      border: none;
      display: block;
      padding: 0;
      margin: 0;
      width: 0;
      height: 0;
    }

    /* Wenn das Eingabefeld den Fokus erhält, das Label verkleinern und das Eingabefeld anzeigen */
    /* Alternative zu :not([role=switch]) wäre alle input[type=text][type=number]... aufzuzählen, also eine Positivliste. **/
    &:has(input:focus:not([type=checkbox], [type=radio], [type=range], [type=time], [type=month], [type=week], [type=date], [type=datetime-local], [type=color], [type=button], [type=file])),
    &:has(input:not(:placeholder-shown, [type=checkbox], [type=radio], [type=range], [type=time], [type=week], [type=month], [type=date],
        [type=datetime-local], [type=color], [type=button], [type=file])) {
      font-size: var(--font-size-small);
      line-height: var(--line-height-normal);

      input {
        width: 100%;
        /* Muss exakt mit line-height übereinstimmen */
        height: calc(var(--font-size-normal) * var(--line-height-normal));
        font-size: var(--font-size-normal);
        line-height: var(--line-height-normal);
      }
    }
  }

  label:has(select),
  label:has(input[type=checkbox], input[type=time], input[type=range], input[type=month], input[type=week], [type=date],
    [type=datetime-local], [type=color], [type=button], [type=file]) {
    display: flex;
    justify-content: space-between;
    align-items: center;

    --color-switch-background: #585858;
    --color-switch-foreground: #d2d2d2;

    input[type=range] {
      flex-grow: 1;
      margin-left: var(--space-m);
    }
  }

  select {
    background-color: inherit;
  }
}

header {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: space-between;
  align-items: center;
  column-gap: var(--space-m);
  /* TODO: Klären, ob das erforderlich ist. Die Kopfzeile soll nicht umbrechen */
  row-gap: var(--space-xs);
  overflow: hidden;

  /* TODO: In Arbeit */
  padding-block: var(--space-2xs);

  /* TODO: In Arbeit */
  padding-inline: var(--space-xs);
  text-wrap: nowrap;

  /* Folgende Elemente verschlucken */
  form,
  search {
    display: contents;
  }

  nav {
    border: var(--layout-border);
    display: flex;
    align-items: center;
    justify-content: flex-start;

    ul,
    menu {
      display: flex;
      column-gap: var(--space-m);
      list-style-type: none;
    }
  }

  /* Wenn nur ein Nachfolger existiert, zentriere diesen. */
  &:has(>*:first-child:last-child) {
    justify-content: center;
  }

  /* Elemente, die weder vergrößert noch verkleinert werden */
  div,
  input,
  button,
  [role=button] {
    flex: 0 0 auto;
  }

  div {
    margin: 0;

    /* TODO: In Arbeit. Wird hier nicht der voreingestellte Wert gezogen ? */
    padding: 0;
  }

  label,
  div {
    display: flex;
    flex-direction: row;
    /* TODO: In Arbeit. Welchen Sinn hat das ?*/
    column-gap: 0.1rem;

  }

  span {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
  }

  label {
    flex: 1 1 auto;
    min-width: 0;
    align-items: center;
    column-gap: var(--space-xs);
    line-height: 1.0;
    background-color: var(--color-background2);

    &:focus-within {
      outline: auto;
      background-color: var(--color-background3);
    }

    input {
      flex: 1 1 auto;
      min-width: 0;
    }
  }

  input {
    border: none;
    background-color: inherit;
    outline: none;
  }
}
