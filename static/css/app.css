:root {
  --layout-border: thin dotted darkgrey;

  /* Sollte bei mir Cantarell sein */
  --font-family: system-ui, sans-serif;

  /* Desktop Umgebung gibt die Schriftgröße in der Einheit pt an */
  --font-size: 11pt;

  /* Abstände der Blockelemente */
  --space-small: 0.7rem;
  --space-large: 1.1rem;

  /* Textfarbe für aktive Elemente, normale Schriftfarbe */
  --color-text: #f2f2f2;
  --color-text-low: hsl(from var(--color-text) h s calc(l - 20));
  --color-text-high: hsl(from var(--color-text) h s calc(l + 20));
  /* Akkzentfarbe des Browser. Wenn die Akzentfarbe des Browsers verwendet wird, müssen die Steuerelemente des Browsers nicht angepasst werden. Das betrifft zum Beispiel das select Element. Komplexere Steuerelemente, die einen eigenen Dialog öffnen, berücksichtigen dies aber nicht. */
  --color-accent: #3584e4;
  --color-accent-low: hsl(213, 50%, 50%);
  --color-accent-high: hsl(213, 55%, 45%);

  --color-danger: #f00;
  --color-danger-low: hsl(0, 50%, 50%);
  --color-danger-high: hsl(0, 55%, 45%);

  /* Textfarbe für inaktive Elemente */
  --color2: #8e8e8e;

  --color3: #656565;

  /* Hintegrundfarbe */
  --color-bg: #1e1e1e;

  /* Hintergrund der Kopfzeile / Titelleiste */
  --color-bg1: #303030;

  --color-rahmen-hell: #3f3f3f;
  --color-rahmen-dunkel: #161616;

  --color-button-background: #434343;
  --color-button-background-low: hsl(from var(--color-button-background) h s calc(l - 10));

  --color-button-text: #fff;
  --color-button-background1: #3e3e3e;
  --color-details-background: #353535;

  /* Hintegrundfarbe für Navigationselemente der Seiteleiste, die aktiv sind oder hover */
  --color-background-aktiv-focus: #444444;

  /* Hintergrundfarbe der Seitenleiste */
  --color-background-sidebar: #303030;
  --color-background-sidebar-hightlight: #3f3f3f;
  --color-border-sidebar-right: #1f1f1f;
  --color-trennlinie-sidebar: #4f4f4f;

  --border-radius: 3px;
  color-scheme: light dark;
}

/* Reset / Defaults */

*,
*::before,
*::after {
  box-sizing: border-box;
}

* {
  margin: 0;
}

body {
  font-family: var(--font-family);
  color: var(--color-text);
  background-color: var(--color-bg);
}

a:visited {
  color: inherit
}

html {
  accent-color: var(--color-accent);
  font-size: var(--font-size);
  line-height: 1.6;
}

/* Gehört das zum CSS Reset?*/
:focus,
:focus-visible {
  /* outline: 1px solid red; */
  /* TODO */
}

::selection {
  /* TODO: Vielleicht gibt es doch eine Möglichkeit die Akzentfarbe des Systems anzuzapfen. (Als Farbe den Wert Highlight benutzen.) */
  background-color: var(--color-accent);
}

/* TODO: Prüfen, ob das eine Wirkung hat.*/
input[type=date] {
  accent-color: var(--color-accent);
  color: var(--color-accent);
}

img {
  max-width: 100%;
  display: block;
}

input,
button,
textarea,
select {
  font-family: inherit;
  font-size: inherit;
}

/* Typografie */

figcaption,
caption {
  font-weight: bold;
  text-align: left;
}


/* Horizontale Abstände */
menu {
  padding: 0;
}

/* Vertikale Abstände */
main {

  article,
  table,
  div {
    margin-top: var(--space-large);
  }
}

h1,
h2,
h3,
h4,
h5,
h6,
details {
  margin-block-start: var(--space-large);
}

p,
pre,
caption,
figure,
figcaption,
fieldset,
dl {
  margin-block-start: var(--space-small);
}

ol>li {
  margin-top: var(--space-small)
}

/* Anwendungslayout */

body {
  height: 100vh;
  display: grid;
  grid-template-areas: "sidebar header"
    "sidebar content"
    "footer footer";

  /* Die Sidebar nimmt sich soviel Platz, wie sie benötigt; Der Inhaltsbereich wächst mit der Fenstergröße.*/
  grid-template-columns: auto 1fr;

  &>header {
    grid-area: header;
  }

  main {
    grid-area: content;
    overflow-y: auto;
  }

  aside {
    grid-area: sidebar;
    overflow-y: auto;
  }

  footer {
    grid-area: footer;
  }

  header,
  footer {
    outline: var(--layout-border)
  }
}

/* Content Layout */

main {
  --padding-inline: 2rem;
  --content-width: 70ch;
  --breakout-width: 95ch;

  --breakout-size: calc((var(--breakout-width) - var(--content-width)) / 2);

  display: grid;
  grid-template-columns: [full-width-start] minmax(var(--padding-inline), 1fr) [breakout-start] minmax(0, var(--breakout-size)) [content-start] min(100% - (var(--padding-inline) * 2), var(--content-width)) [content-end] minmax(0, var(--breakout-size)) [breakout-end] minmax(var(--padding-inline), 1fr) [full-width-end];

  >* {
    grid-column: content;
  }

  /* Etwas breiter als gewöhnlicher Inhalt */
  >.breakout {
    grid-column: breakout;
  }

  /* Vollständige Breite des Inhaltsbereichs */
  >.full-width {
    grid-column: full-width;
  }
}

/* Alles zum Thema header */


.fill {
  flex-grow: 1;
}

/* Styling */

/* Allgemeine Gestaltung der Schatlfächen */
button,
input[type=button],
input[type=submit],
input[type=reset],
[role=button] {
  border: none;
  border-radius: 6px;
  padding: 0.5rem 1rem;
  font-weight: 600;
  cursor: default;
  line-height: 1.1;

  color: var(--_button-fg);
  background-color: var(--_button-bg);

  b,
  strong {
    font-weight: 600;
  }

  em {
    font-style: normal;
  }

  &:hover {
    color: var(--_button-highlight-fg);
    background-color: var(--_button_highlight-bg);
  }
}

/* Vorrangige Steuerelemente */
button:has(em),
a[role=button]:has(em),
input[type=submit] {
  --_button-fg: var(--color-text-low);
  --_button-highlight-fg: var(--color-text-high);
  --_button-bg: var(--color-accent-low);
  --_button_highlight-bg: var(--color-accent-high);
}

/* Destruktive Steuerelemente */
button:has(strong),
a[role=button]:has(strong) {
  --_button-fg: var(--color-text-low);
  --_button-highlight-fg: var(--color-text-high);
  --_button-bg: var(--color-danger-low);
  --_button_highlight-bg: var(--color-danger-high);
}

/* Nachrangige Steuerelemente */
button:has(b),
a[role=button]:has(b),
input[type=reset] {
  --_button-fg: var(--color-text-low);
  --_button-highlight-fg: var(--color-text-high);
  --_button-bg: var(--color-button-background-low);
  --_button_highlight-bg: var(--color-button-background);

}

/* Kontextfreie Steuerelemente */
button,
a[role=button] {
  --_button-fg: var(--color-text-low);
  --_button-highlight-fg: var(--color-text-high);
  --_button-bg: inherit;
  --_button_highlight-bg: var(--color-button-background);
}

/* Active mutually exclusive button */
span[role=button] {
  --_button-fg: var(--color-text-high);
  --_button-highlight-fg: var(--color-text-high);
  --_button-bg: var(--color-button-background);
  --_button_highlight-bg: var(--color-button-background);
}

a,
a:visited {
  color: var(--color-text-low)
}

a:hover {
  color: var(--color-text-high);
}

a[role=button] {
  text-decoration: none;
}

a:has(em):not([role=button]) {
  color: var(--color-accent-low);

  &:visited {
    color: var(--color-accent-low);
  }

  &:hover {
    color: var(--color-accent-high);
  }

  em {
    font-style: normal;
  }
}

a:has(b) {
  color: var(--color-text-low);

  &:visited {
    color: var(--color-text-low);
  }

  &:hover {
    color: var(--color-text-high)
  }
}

label button,
label ::file-selector-button,
label input[type=button],
[role=button],
input[type=submit] {
  /* background-color: var(--color-button-background); */
}


/* Styles für Buttons . Das hier ist gültig!*/

/* line-height: 509, 75 */


button,
::file-selector-button {
  /* color: var(--color-text);
  background-color: inherit; */
  /* background-color: var(--color-button-background); */
  /* border: none;
  border-radius: var(--border-radius);
  padding: 0 0.2rem;
  min-width: 1.5em; */

  &:hover {
    /* background-color: var(--color-button-background); */
  }
}

aside {
  background-color: var(--color-background-sidebar);
  border-right: 1px solid var(--color-border-sidebar-right);
  font-weight: 500;

  &>nav {
    menu {
      list-style-type: none;
      padding: 0.25rem;

      >li {
        a {
          padding: 0.4rem;
          margin-top: 0.1rem;
          color: inherit;
          text-decoration: none;
          display: inline-block;
          width: 100%;
          height: 100%;
          border-radius: var(--border-radius);

          &:focus-visible,
          &:hover,
          &.active {
            background-color: var(--color-background-sidebar-hightlight);
          }
        }
      }

      &:not(:last-child) {
        border-bottom: 1px solid var(--color-trennlinie-sidebar);
      }
    }
  }
}

details[open]>summary::after {
  content: "\276e";
}

details>*:not(:first-child) {
  margin-inline: 1rem;
}

details[open] {
  padding-bottom: 1rem;

  summary {
    border-radius: 10px 10px 0 0;
  }
}

details {

  box-shadow: 0 0 2px 2px #222222;
  background-color: #2b2b2b;
  border-radius: 10px;

  summary {
    background-color: var(--color-details-background);
    padding: 1rem;
    list-style-type: none;
    cursor: pointer;
    border-radius: 10px;
  }

  summary::after {
    display: block;
    float: right;
    content: "\276f";
    transform: rotate(270deg);
  }
}



details figure {
  overflow-x: auto;
}

.breakout {
  background-color: #2b2b2b;
  border-radius: 10px;
  box-shadow: 0 0 2px 2px #222222;
}

/* Cards */

/* Kartenansicht Layout*/
main>ul {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  grid-auto-rows: minmax(300px, auto);
  justify-items: center;
  justify-content: center;
  gap: 1rem;
  padding: 1rem;

  /* Karten sind Listitems in der Auflistung */
  >li {
    /* Karten müssen eine feste Breite besitzen.*/
    /* Todo: Breite der Karten als Variable */
    /* width: 300px; */
    position: relative;
    /* outline: var(--layout-border); */

    a {
      text-decoration: none;
    }

    /* Der Trick, dass Karten anklickbar sind */
    a::after {
      position: absolute;
      inset-block: 0;
      inset-inline: 0;
      cursor: pointer;
      content: "";
    }
  }
}

/* Effekte */
/* Bei Karten mit Fokus oder Hover das enthaltene Bild heranzoomen und einen Schatten erzeugen */
main>ul {


  >li {
    --image-scale: 1.001;
    overflow: hidden;
    transform-origin: center;
    background-color: var(--background-color);
    margin: 0;
    border-radius: 10px;
    width: 100%;

    img {
      transform-origin: center;
      transform: scale(var(--img-scale));
      transition: transform 0.4s ease-in-out;
      object-fit: contain;
      width: 100%;
    }

    div {
      padding: 0.5rem;
    }

    /* Wenn der Link in der Karte den Fokus hat, die ganze Karte hervorheben, nicht den Link. */
    &:focus-within {
      outline: auto;
    }

    /* Links mit Fokus werden nicht hervorgehoben. */
    a:focus {
      outline: none;
    }
  }

  /* Aktive Karten hervorheben */
  >li:has(:hover, :focus) {
    --img-scale: 1.1;
    box-shadow: 0 8px 12px rgba(0, 0, 0, 0.7);
  }

  >li {
    background-color: #2a2a2a;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
    transition: box-shadow 0.3s ease;
  }
}

/* Listenansicht: Listenansichten sind table Elemente in main */
main table {
  table-layout: auto;
  border-collapse: collapse;
  font-variant-numeric: tabular-nums;

  tr {

    /* line-height: 3.2; */
    /* height: 3.2rem; */

    /* Damit die Tabellenzeile anklickbar wird */
    position: relative;

    td a:empty {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      text-decoration: none;
      color: inherit;
      display: block;
      z-index: 1;

      /* Der Link liegt über dem Tabelleninhalt */

      --table-cell-background: inherit;
    }
  }

  tr:hover {
    --table-cell-background: #272727;
  }

  td {
    min-height: 3.2rem;
  }

  td,
  th {
    padding-inline: 10px;
    background-color: var(--table-cell-background);
    white-space: nowrap;
    text-overflow: ellipsis;
    text-align: left;
  }

  th,
  td:not(:first-child) {
    color: #787878;
  }

  th {
    height: 2.4rem;
    font-weight: normal;

    a {
      cursor: default;
      color: inherit;
      text-decoration: none;
    }
  }

  th:hover:has(a) {
    background-color: #404040;
    color: #c5c5c5;
  }

  th:first-child,
  td:first-child {
    border-top-left-radius: 10px;
    border-bottom-left-radius: 10px;
    width: 100%;
  }

  th:last-child,
  td:last-child {
    border-top-right-radius: 10px;
    border-bottom-right-radius: 10px;
  }

  td:first-child {

    /* Erste Spalte ist ein Flex Container. */
    display: flex;
    flex-direction: row;
    align-items: center;
    column-gap: 20px;
  }


  td img {
    height: 2.5rem;
    width: auto;
    border-radius: 10px;
  }
}

dl {

  display: flex;
  flex-direction: column;
  row-gap: 1px;
  /* background-color: #2b2b2b; */
  /* box-shadow: 0 0 1px 1px #222222; */
  /* display: grid; */
  /* grid-template-columns: auto 1fr; */
  /* row-gap: 1px; */
  /* border-radius: 10px; */
  /* overflow: hidden; */

  /* Gruppierung von dt und dd in einer Zeile */
  &>div {
    display: flex;
    justify-content: space-between;
    /* display: contents; */
    /* Behält die Grid-Struktur bei */
  }

  div {
    background-color: #2b2b2b;
    margin: 0;
    overflow: hidden;
    border-radius: 0;
  }

  div:first-child {
    border-radius: 10px 10px 0 0;
  }

  div:last-child {
    border-radius: 0 0 10px 10px;
  }

  div:first-child:last-child {
    border-radius: 10px;
  }

  div:hover {
    background: #3b3b3b;
  }

  dt,
  dd {
    padding: 10px;
    margin: 0;
  }

  dt {
    display: flex;
    flex-direction: column;
    justify-content: center;
    background-color: inherit;
  }

  dt span {
    font-size: 0.85em;
    color: #787878;
    margin-top: 4px;
  }

  dd {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    text-align: right;
    background-color: inherit;

    a {
      text-decoration: none;
      cursor: default;

      &::after {
        content: '\276f';
        margin-left: 1rem;
      }

      &[target=_blank]::after {
        content: '↗';
        margin-left: 1rem;
      }
    }
  }

  div:focus-visible {
    background: #3b3b3b;
  }
}

.right {
  text-align: right;
}

time {
  font-variant-numeric: tabular-nums;
}

/* Formulare */

form {

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: 11pt;
    font-weight: 600;
  }

  /* Ein Content Devision Element in einer Form ist ein Container mit Flexbox Layout. Er eignet sich insbesondere für die Anordnung verschiedener Aktionsschaltflächen. */
  &>div {
    display: flex;
    flex-flow: row wrap;
    column-gap: 10px;
    justify-content: flex-start;
  }
}


fieldset {
  display: flex;
  flex-direction: column;
  gap: 2px;

  /* background-color: #2b2b2b; */
  box-shadow: 0 0 1px 1px #222222;
  border-radius: 10px;
  border: none;
  /* overflow: hidden; */

  padding: 0;


  /* 11pt = 14,6667px */
  font-size: 11pt;

  /* 14,6667px * 1.3 = 19,06671px */
  line-height: 1.3;

  label:first-child {
    border-radius: 10px 10px 0 0;
  }

  label:last-child {
    border-radius: 0 0 10px 10px;
  }

  label:first-child:last-child {
    border-radius: 10px;
  }

  label {
    border: 1px solid transparent;
  }

  /* Anstatt das Steuerelement hervorzuheben, wird das Label hervorgehoben, wenn das Steuerelement im Label den Fokus besitzt. */
  label:focus-within {
    /* Übernimmt den voreingestellten Stil fokussierter Elemente für das Label */
    outline: auto;

    /* Verhindert die Überlagerung des Outline durch nachfolgende Elemente */
    z-index: 99;

    /* Schaltet die Hervorhebung fokussierter Steuerelemente aus */
    input,
    select {
      outline: none;
    }
  }

  a {
    color: var(--color-accent);
  }

  a:visited {
    color: var(--color-accent);
  }
}

fieldset {

  input[type=text],
  input[type=search],
  input[type=number],
  input[type=date],
  input[type=datetime-local],
  input[type=time],
  input[type=week],
  input[type=email],
  input[type=tel],
  input[type=month],
  input[type=password],
  input[type=url],
  input[type=color] {
    background-color: inherit;
    color: var(--color-text);
    accent-color: var(--color-accent);
  }

  input[type=number] {
    appearance: auto;
  }

  /* Die Durchsuchen... Schaltfläche nicht anzeigen */
  input[type=file]::file-selector-button {
    display: none;
  }

  input[type=file] {
    text-align: right;
  }

  select {
    /* border: var(--layout-border); */
    border: none;
    display: block;
    float: right
  }

  input[type=time],
  input[type=month],
  input[type=week],
  input[type=date],
  input[type=datetime-local] {
    background-color: inherit;
    color: inherit;
    border: none;
  }


  input[type=color] {
    border: 1px solid transparent;
  }


  label:has(textarea) {
    display: flex;
    flex-direction: column;
  }

  textarea {
    display: block;
    padding: 0.5rem;
    resize: vertical;
    outline: none;
    background-color: inherit;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
    transition: box-shadow 0.3s ease;
    border-radius: 10px;
    min-height: 7rem;

    &:has(:hove, :focus) {
      box-shadow: 0 8px 12px rgba(0, 0, 0, 0.7);
    }
  }

  /* Deaktivierte Eingabefelder nicht hervorheben */
  label:hover:not(:has([disabled])),
  label:has(:focus-visible) {
    background: #3b3b3b;
  }
}

fieldset {
  label {
    /* Zeichensatzgröße für kleine Labels */
    --font-size-small: 10px;

    /* Zeichensatzgröße für große Labels oder Eingaben */
    --font-size-normal: 14px;

    /* Regulärer Zeilenabstand - kleines Label und Eingabe */
    --line-height-normal: 1.5;

    /* Gesamthöhe des Eingabefeldes mit kleinem Label und Eingabe */
    --content-height: calc((var(--font-size-small) + var(--font-size-normal)) * var(--line-height-normal));

    background-color: #2b2b2b;
    box-shadow: 0 0 1px 1px #222222;
    /*
    Beispiel:
    Kleines Label             10px
    Großes Label oder Eingabe 14px
    Normaler Zeilenabstand    1.5
    Gesamthöhe (10px + 14px) * 1.5 = 36
  */

    /* Als Zeilenabstand die gesamte Höhe verwenden */
    line-height: var(--content-height);
    font-size: var(--font-size-normal);

    display: block;

    padding: 10px;

    /* Kein Focus, kein Wert => unsichtbar (Größe = 0) */
    input[type=text],
    input[type=number],
    input[type=email],
    input[type=tel],
    input[type=password],
    input[type=url] {
      border: none;
      display: block;
      padding: 0;
      margin: 0;
      width: 0;
      height: 0;
    }

    /* Wenn das Eingabefeld den Fokus erhält, das Label verkleinern und das Eingabefeld anzeigen */
    /* Alternative zu :not([role=switch]) wäre alle input[type=text][type=number]... aufzuzählen, also eine Positivliste. **/
    &:has(input:focus:not([type=checkbox], [type=radio], [type=range], [type=time], [type=month], [type=week], [type=date], [type=datetime-local], [type=color], [type=button], [type=file])),
    &:has(input:not(:placeholder-shown, [type=checkbox], [type=radio], [type=range], [type=time], [type=week], [type=month], [type=date],
        [type=datetime-local], [type=color], [type=button], [type=file])) {
      font-size: var(--font-size-small);
      line-height: var(--line-height-normal);

      input {
        width: 100%;
        /* Muss exakt mit line-height übereinstimmen */
        height: calc(var(--font-size-normal) * var(--line-height-normal));
        font-size: var(--font-size-normal);
        line-height: var(--line-height-normal);
      }
    }
  }

  label:has(select),
  label:has(input[type=checkbox], input[type=time], input[type=range], input[type=month], input[type=week], [type=date],
    [type=datetime-local], [type=color], [type=button], [type=file]) {
    display: flex;
    justify-content: space-between;
    align-items: center;

    /* Als Zeilenabstand die gesamte Höhe verwenden */
    /* line-height: var(--content-height);
  font-size: var(--font-size-normal); */

    --color-switch-background: #585858;
    --color-switch-foreground: #d2d2d2;

    input[type=range] {
      flex-grow: 1;
      margin-left: 1rem;
    }

    input[role=switch] {
      appearance: none;
      width: 50px;
      height: 24px;
      background-color: var(--color-switch-background);
      border-radius: 24px;
      cursor: pointer;
      transition: background-color 0.4s;
      display: flex;
      align-items: center;
      justify-content: flex-start;
      padding: 3px;
    }

    input[role=switch]::before {
      content: "";
      width: 18px;
      height: 18px;
      background-color: var(--color-switch-foreground);
      border-radius: 50%;
      transition: margin-left 0.4s;
    }

    input[role=switch]:checked {
      background-color: var(--color-accent);
      justify-content: flex-end;
    }
  }

  select {
    background-color: inherit;
    color: var(--color-text);
  }
}

header {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: space-between;
  align-items: center;
  column-gap: 1rem;
  row-gap: 0.5rem;
  overflow: hidden;
  padding-block: 0.25rem;
  padding-inline: 0.5rem;
  text-wrap: nowrap;

  /* Wenn nur ein Nachfolger existiert, zentriere diesen. */
  &:has(>*:first-child:last-child) {
    justify-content: center;
  }

  /* Elemente, die weder vergrößert noch verkleinert werden */
  div,
  input,
  button,
  [role=button] {
    flex: 0 0 auto;
  }

  div {
    margin: 0;
    padding: 0;
  }



  [role=button],
  input[type=button],
  input[type=submit],
  input[type=reset],
  input,
  button {
    padding: 0.3rem;
    border-radius: 4px;
    overflow: auto;
  }

  label,
  div {
    display: flex;
    flex-direction: row;
    column-gap: 0.1rem;

  }

  input {
    border: none;
    background-color: inherit;
    outline: none;
  }

  span {
    flex: 1 1 auto;
    min-width: 0;
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
    display: inline-block;
  }

  label {
    flex: 1 1 auto;
    min-width: 0;
    align-items: center;
    column-gap: 0.5rem;
    line-height: 1.0;
    border-radius: 4px;
    background-color: var(--color-bg1);
    padding-inline: 0.5rem;

    &:focus-within {
      outline: auto;
    }

    input {
      flex: 1 1 auto;
      min-width: 0;
    }
  }

  search:focus-within {
    /* flex-grow: 1; */
  }
}


header {

  form,
  search {
    display: contents;
  }
}

header nav {

  border: var(--layout-border);
  display: flex;
  align-items: center;
  justify-content: flex-start;

  ul,
  menu {
    display: flex;
    column-gap: 1rem;
    list-style-type: none;

    li {
      a {
        text-decoration: none;
      }
    }
  }
}
